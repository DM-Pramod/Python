gate_arc_dict = {
    (0, 1): [(1, 4, 1), '0->G1->G2->1', 10, 3000],
    (2, 3): [(4, 4, 6), '2->G1->G2->3', 18, 3000],
    (1, 3): [(1, 6), '1->G2->3', 7, 2000],
    (2, 0): [(5, 3), '2->G2->0', 8, 2000],
    (1, 0): [(1, 0, 1), '1->G2->G1->0', 6, 3000]
}

output_list = []
acs_list = []

for key, value in gate_arc_dict.items():
    travel_days, travel_path, total_days, cost = value
    elements = travel_path.split('->')
    sublist = []
    acs_sublist = []
    gate_counter = 111  # Initialize gate counter

    for element in elements:
        if element.startswith('G'):
            gate_type = element.replace('G', 'Gate')
            sublist.append(f'{gate_counter} {gate_type} {total_days} {cost}')
            acs_sublist.append(f'{gate_counter} {gate_type}')
            gate_counter += 1
        else:
            sublist.append(element)
            acs_sublist.append(element)

    output_list.append(sublist)
    acs_list.append(acs_sublist)

# Initialize nds and acs
nds = []
acs = []

# Process each sublist for nds
for sublist in output_list:
    for item in sublist:
        if 'Gate' in item:
            nds.append(item)

# Process each sublist for acs
for sublist in acs_list:
    for i in range(len(sublist) - 1):
        acs.append(f'{sublist[i]} {sublist[i+1]}')

# Print the results
print("nds:", nds)
print("acs:", acs)
